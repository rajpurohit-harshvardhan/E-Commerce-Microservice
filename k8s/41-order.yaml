apiVersion: v1
kind: Service
metadata:
  name: order
  namespace: ecommerce-ms
spec:
  selector:
    app: order
  ports:
    - name: http
      port: 8083
      targetPort: 8083
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: ecommerce-ms
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: order
          image: ecommerce/order:latest
          imagePullPolicy: IfNotPresent
          args: ["-config", "/etc/config/config.yaml"]
          env:
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET_KEY
          ports:
            - containerPort: 8083
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          volumeMounts:
            - name: cfg
              mountPath: /etc/config
      volumes:
        - name: cfg
          configMap:
            name: order-config
            items:
              - key: config.yaml
                path: config.yaml
