{
	"info": {
		"_postman_id": "3543e859-7448-44b1-a175-27f6789745df",
		"name": "Ecommerce Microservice",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "13053036"
	},
	"item": [
		{
			"name": "Product",
			"item": [
				{
					"name": "Get List of products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{product_base_url}}/api/v1/products/list?limit=5&offset=0",
							"host": [
								"{{product_base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"IPhone 17 Air\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{product_base_url}}/api/v1/products/854e55be-8db1-4eb0-899a-62f9f164b99d",
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{product_base_url}}/api/v1/products/6203fd4c-1c78-47b2-beca-b2c07d1277bb",
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "create new product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Iphone 15 air\",\n    \"sku\": \"iph20252\",\n    \"description\": \"asdasdqwdasd\",\n    \"price\": 85000,\n    \"stock\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{product_base_url}}/api/v1/products",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get list of Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{order_base_url}}/api/v1/orders/list?limit=5&offset=0",
							"host": [
								"{{order_base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{order_base_url}}//api/v1/orders/3d362b81-47d3-4265-9434-9216013aa641",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Delete order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{order_base_url}}/api/v1/orders/54049ca3-e491-4d27-9b7c-de868c706a08",
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "create new order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "40a1cb6b-b954-4ee2-b9c0-15e4276a1e46",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"items\": \n    [\n        {\n            \"id\": \"854e55be-8db1-4eb0-899a-62f9f164b99d\",\n            \"quantity\": 2,\n            \"price\": 85000.0\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{order_base_url}}/api/v1/orders",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update product by id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Cancelled\",\n\t\"items\": \n    [\n        {\n            \"id\": \"854e55be-8db1-4eb0-899a-62f9f164b99d\",\n            \"quantity\": 2,\n            \"price\": 29.99\n        },\n        {\n            \"id\": \"854e55be-8db1-4eb0-899a-62f9f164b99d\",\n            \"quantity\": 1,\n            \"price\": 2.99\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{order_base_url}}/v1/order/854e55be-8db1-4eb0-899a-62f9f164b99d",
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register New user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Harsh\",\r\n    \"email\": \"h123@gmail.com\",\r\n    \"password\": \"a123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/register"
					},
					"response": []
				},
				{
					"name": "Get User details by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTkzMTQ5OTYsImlhdCI6MTc1OTMwNzc5Niwic3ViIjoiODUzYjAwNmItNjMzOC00NzU1LWI0NDgtOTk3ZDEyNmFiYTBhIiwidHlwZSI6ImFjY2VzcyJ9.4nlxlyNRayl9CbbRdnhMpurPxPQygdvspmEs2X7DXlI"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{auth_base_url}}/api/v1/user/853b006b-6338-4755-b448-997d126aba0a"
					},
					"response": []
				},
				{
					"name": "Update User details by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTkzMTQ5OTYsImlhdCI6MTc1OTMwNzc5Niwic3ViIjoiODUzYjAwNmItNjMzOC00NzU1LWI0NDgtOTk3ZDEyNmFiYTBhIiwidHlwZSI6ImFjY2VzcyJ9.4nlxlyNRayl9CbbRdnhMpurPxPQygdvspmEs2X7DXlI"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"harsh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/853b006b-6338-4755-b448-997d126aba0a"
					},
					"response": []
				},
				{
					"name": "Delete product by id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTkzMTQ5OTYsImlhdCI6MTc1OTMwNzc5Niwic3ViIjoiODUzYjAwNmItNjMzOC00NzU1LWI0NDgtOTk3ZDEyNmFiYTBhIiwidHlwZSI6ImFjY2VzcyJ9.4nlxlyNRayl9CbbRdnhMpurPxPQygdvspmEs2X7DXlI"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/5f35250a-7423-4101-bfca-bc8587cb9c07",
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"h123@gmail.com\",\r\n    \"password\": \"a123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/login"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTkzMTg2MDYsImlhdCI6MTc1OTMxMTQwNiwic3ViIjoiODUzYjAwNmItNjMzOC00NzU1LWI0NDgtOTk3ZDEyNmFiYTBhIiwidHlwZSI6ImFjY2VzcyJ9.3Ht-Bc-IpDNs4hfuLNhCcwyAJdGHbCix62-Vbab4-B0"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"a1d842f9bbbb4eebc3c4f14b85b3cd93ff499b0b0517e732d80b53c0c407e289\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/logout"
					},
					"response": []
				},
				{
					"name": "Refresh tokens",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTkzMTg2MDYsImlhdCI6MTc1OTMxMTQwNiwic3ViIjoiODUzYjAwNmItNjMzOC00NzU1LWI0NDgtOTk3ZDEyNmFiYTBhIiwidHlwZSI6ImFjY2VzcyJ9.3Ht-Bc-IpDNs4hfuLNhCcwyAJdGHbCix62-Vbab4-B0"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"a1d842f9bbbb4eebc3c4f14b85b3cd93ff499b0b0517e732d80b53c0c407e289\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{auth_base_url}}/api/v1/user/refresh"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "order_base_url",
			"value": ""
		},
		{
			"key": "product_base_url",
			"value": ""
		},
		{
			"key": "auth_base_url",
			"value": "",
			"type": "default"
		}
	]
}